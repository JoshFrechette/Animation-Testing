{"ast":null,"code":"var _jsxFileName = \"/Users/joshuafrechette/coding/Animation-Testing/src/contexts/PlayerContext.js\";\nimport React, { createContext, useReducer, useContext } from 'react';\nimport { dungeon } from '../maps/dungeon';\nconst PlayerContext = createContext();\nconst {\n  Provider\n} = PlayerContext;\nconst SPRITE_SIZE = 40;\nconst MAX_WIDTH = 800;\nconst MAX_HEIGHT = 400;\n\nconst observeBoundries = newPosition => {\n  return newPosition[0] >= 0 && newPosition[0] <= MAX_WIDTH - SPRITE_SIZE && newPosition[1] >= 0 && newPosition[1] <= MAX_HEIGHT - SPRITE_SIZE;\n};\n\nconst observeObstacles = newPosition => {\n  const x = newPosition[0] / SPRITE_SIZE;\n  const y = newPosition[1] / SPRITE_SIZE;\n  const nextTile = dungeon[y][x];\n  return nextTile === 0;\n};\n\nconst dispatchMove = (oldPosition, newPosition) => {\n  if (observeBoundries(newPosition) && observeObstacles(newPosition)) {\n    return newPosition;\n  } else {\n    return oldPosition;\n  }\n};\n\nconst playerReducer = (state, action) => {\n  const oldPosition = state.position;\n\n  switch (action.type) {\n    case 'moveleft':\n      return {\n        position: dispatchMove(oldPosition, [state.position[0] - SPRITE_SIZE, state.position[1]])\n      };\n\n    case 'moveup':\n      return {\n        position: dispatchMove(oldPosition, [state.position[0], state.position[1] - SPRITE_SIZE])\n      };\n\n    case 'moveright':\n      return {\n        position: dispatchMove(oldPosition, [state.position[0] + SPRITE_SIZE, state.position[1]])\n      };\n\n    case 'movedown':\n      return {\n        position: dispatchMove(oldPosition, [state.position[0], state.position[1] + SPRITE_SIZE])\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst PlayerProvider = ({\n  value = [0, 40],\n  ...props\n}) => {\n  const [state, dispatch] = useReducer(playerReducer, {\n    position: value\n  });\n  return React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n};\n\nconst usePlayerContext = () => {\n  return useContext(PlayerContext);\n};\n\nexport { PlayerProvider, usePlayerContext };","map":{"version":3,"sources":["/Users/joshuafrechette/coding/Animation-Testing/src/contexts/PlayerContext.js"],"names":["React","createContext","useReducer","useContext","dungeon","PlayerContext","Provider","SPRITE_SIZE","MAX_WIDTH","MAX_HEIGHT","observeBoundries","newPosition","observeObstacles","x","y","nextTile","dispatchMove","oldPosition","playerReducer","state","action","position","type","PlayerProvider","value","props","dispatch","usePlayerContext"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\nimport { dungeon } from '../maps/dungeon';\n\nconst PlayerContext = createContext();\nconst { Provider } = PlayerContext;\n\nconst SPRITE_SIZE = 40;\nconst MAX_WIDTH = 800;\nconst MAX_HEIGHT = 400;\n\nconst observeBoundries = newPosition => {\n  return (\n    newPosition[0] >= 0 &&\n    newPosition[0] <= MAX_WIDTH - SPRITE_SIZE &&\n    newPosition[1] >= 0 &&\n    newPosition[1] <= MAX_HEIGHT - SPRITE_SIZE\n  );\n};\n\nconst observeObstacles = newPosition => {\n  const x = newPosition[0] / SPRITE_SIZE;\n  const y = newPosition[1] / SPRITE_SIZE;\n\n  const nextTile = dungeon[y][x];\n\n  return nextTile === 0;\n};\n\nconst dispatchMove = (oldPosition, newPosition) => {\n  if (observeBoundries(newPosition) && observeObstacles(newPosition)) {\n    return newPosition;\n  } else {\n    return oldPosition;\n  }\n};\n\nconst playerReducer = (state, action) => {\n  const oldPosition = state.position;\n  switch (action.type) {\n    case 'moveleft':\n      return {\n        position: dispatchMove(oldPosition, [\n          state.position[0] - SPRITE_SIZE,\n          state.position[1]\n        ])\n      };\n    case 'moveup':\n      return {\n        position: dispatchMove(oldPosition, [\n          state.position[0],\n          state.position[1] - SPRITE_SIZE\n        ])\n      };\n    case 'moveright':\n      return {\n        position: dispatchMove(oldPosition, [\n          state.position[0] + SPRITE_SIZE,\n          state.position[1]\n        ])\n      };\n    case 'movedown':\n      return {\n        position: dispatchMove(oldPosition, [\n          state.position[0],\n          state.position[1] + SPRITE_SIZE\n        ])\n      };\n    default:\n      return state;\n  }\n};\n\nconst PlayerProvider = ({ value = [0, 40], ...props }) => {\n  const [state, dispatch] = useReducer(playerReducer, { position: value });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst usePlayerContext = () => {\n  return useContext(PlayerContext);\n};\n\nexport { PlayerProvider, usePlayerContext };\n"]},"metadata":{},"sourceType":"module"}